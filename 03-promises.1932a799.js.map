{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,aAC7BC,MAAOF,SAASC,cAAc,sBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAEjCI,QAAQC,IAAIR,GACZ,IAAcS,EAAwBT,EAAxBI,MAAOM,EAAiBV,EAAjBK,KAAMM,EAAWX,EAAXM,OAoB3B,SAASM,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUT,MAAAU,IAEpBG,EAAO,CAAEJ,WAAUT,MAAAU,G,GAEpBA,E,IA7B+Bd,EAA9BC,KAEHqB,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAMC,iBAGN,IAFA,IAAIC,EAAaC,OAAOjB,EAAMkB,OAErBC,EAAgB,EAAGA,GAAiBjB,EAAOgB,MAAOC,IACzDhB,EAAcgB,EAAeH,GAC1BI,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUkB,EAAKD,EAAL1B,MACjBN,EAAAkC,OAAOC,QAAQ,qBAAoCC,OAAfrB,EAAS,QAAYqB,OAANH,EAAM,O,IAE1DI,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUuB,EAAKN,EAAL1B,MAClBN,EAAAkC,OAAOK,QAAQ,kBAAiCH,OAAfrB,EAAS,QAAYqB,OAANE,EAAM,O,IAE1DX,GAAcC,OAAOhB,EAAKiB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form.form'),\n  delay: document.querySelector('input[name=\"delay\"'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\nconsole.log(refs);\nconst { form, delay, step, amount } = refs;\n\nform.addEventListener('submit', promiseGenerator);\n\nfunction promiseGenerator(event) {\n  event.preventDefault();\n  let delayValue = Number(delay.value);\n\n  for (let positionValue = 1; positionValue <= amount.value; positionValue++) {\n    createPromise(positionValue, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms.`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Reject promise ${position} in ${delay}ms.`);\n      });\n    delayValue += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","console","log","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayValue","Number","value","positionValue","then","param","delay1","Notify","success","concat","catch","delay2","failure"],"version":3,"file":"03-promises.1932a799.js.map"}